# Generated by Django 4.2.7 on 2025-09-15 05:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('hr', '0001_initial'),
        ('finance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockchainTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('transaction_hash', models.CharField(max_length=66, unique=True)),
                ('transaction_type', models.CharField(choices=[('payment', 'Payment'), ('contract_deploy', 'Contract Deployment'), ('contract_call', 'Contract Call'), ('token_transfer', 'Token Transfer'), ('nft_mint', 'NFT Mint'), ('nft_transfer', 'NFT Transfer'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('from_address', models.CharField(max_length=42)),
                ('to_address', models.CharField(max_length=42)),
                ('value', models.DecimalField(decimal_places=18, default=0, max_digits=36)),
                ('gas_used', models.BigIntegerField(blank=True, null=True)),
                ('gas_price', models.BigIntegerField(blank=True, null=True)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('block_hash', models.CharField(blank=True, max_length=66)),
                ('contract_address', models.CharField(blank=True, max_length=42)),
                ('token_address', models.CharField(blank=True, max_length=42)),
                ('token_symbol', models.CharField(blank=True, max_length=20)),
                ('token_decimals', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockchain_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blockchain Transaction',
                'verbose_name_plural': 'Blockchain Transactions',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='DAOGovernance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('governance_type', models.CharField(choices=[('proposal', 'Proposal'), ('vote', 'Vote'), ('execution', 'Execution'), ('treasury', 'Treasury Management')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('passed', 'Passed'), ('rejected', 'Rejected'), ('executed', 'Executed'), ('expired', 'Expired')], default='draft', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('voting_power_required', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('voting_duration', models.DurationField()),
                ('voting_start', models.DateTimeField(blank=True, null=True)),
                ('voting_end', models.DateTimeField(blank=True, null=True)),
                ('votes_for', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('votes_against', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('total_votes', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('execution_data', models.JSONField(default=dict)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('on_chain_proposal_id', models.CharField(blank=True, max_length=100)),
                ('transaction_hash', models.CharField(blank=True, max_length=66)),
                ('executed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='executed_proposals', to=settings.AUTH_USER_MODEL)),
                ('proposer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DAO Governance',
                'verbose_name_plural': 'DAO Governance',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SmartContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('contract_type', models.CharField(choices=[('erc20', 'ERC-20 Token'), ('erc721', 'ERC-721 NFT'), ('erc1155', 'ERC-1155 Multi-Token'), ('custom', 'Custom Contract')], max_length=20)),
                ('address', models.CharField(max_length=42, unique=True)),
                ('abi', models.JSONField()),
                ('bytecode', models.TextField(blank=True)),
                ('source_code', models.TextField(blank=True)),
                ('deployment_block', models.BigIntegerField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('total_supply', models.DecimalField(blank=True, decimal_places=18, max_digits=36, null=True)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('documentation', models.URLField(blank=True)),
                ('deployer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deployed_contracts', to=settings.AUTH_USER_MODEL)),
                ('deployment_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deployed_contract', to='web3.blockchaintransaction')),
            ],
            options={
                'verbose_name': 'Smart Contract',
                'verbose_name_plural': 'Smart Contracts',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('token_id', models.CharField(blank=True, max_length=100)),
                ('symbol', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('decimals', models.IntegerField(default=18)),
                ('total_supply', models.DecimalField(blank=True, decimal_places=18, max_digits=36, null=True)),
                ('description', models.TextField(blank=True)),
                ('image_url', models.URLField(blank=True)),
                ('external_url', models.URLField(blank=True)),
                ('attributes', models.JSONField(blank=True, default=dict)),
                ('price_usd', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('market_cap', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to='web3.smartcontract')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'ordering': ['symbol', 'name'],
                'unique_together': {('contract', 'token_id')},
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('address', models.CharField(max_length=42, unique=True)),
                ('wallet_type', models.CharField(choices=[('metamask', 'MetaMask'), ('walletconnect', 'WalletConnect'), ('coinbase', 'Coinbase Wallet'), ('trust', 'Trust Wallet'), ('other', 'Other')], max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_signature', models.TextField(blank=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
                'unique_together': {('user', 'address')},
            },
        ),
        migrations.CreateModel(
            name='OnChainAnchor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('anchor_type', models.CharField(choices=[('transaction', 'Transaction Hash'), ('document', 'Document Hash'), ('contract', 'Contract Hash'), ('payment', 'Payment Hash'), ('supply_chain', 'Supply Chain Checkpoint'), ('audit_log', 'Audit Log Hash'), ('invoice', 'Invoice Hash'), ('purchase_order', 'Purchase Order Hash')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('anchored', 'Anchored'), ('confirmed', 'Confirmed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('data_hash', models.CharField(max_length=64)),
                ('original_data', models.JSONField(default=dict)),
                ('data_type', models.CharField(max_length=50)),
                ('blockchain_network', models.CharField(default='ethereum', max_length=50)),
                ('transaction_hash', models.CharField(blank=True, max_length=66)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('block_hash', models.CharField(blank=True, max_length=66)),
                ('gas_used', models.BigIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict)),
                ('related_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web3.smartcontract')),
                ('related_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.invoice')),
                ('related_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.payment')),
            ],
            options={
                'verbose_name': 'On-Chain Anchor',
                'verbose_name_plural': 'On-Chain Anchors',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='GovernanceVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('vote_choice', models.CharField(choices=[('for', 'For'), ('against', 'Against'), ('abstain', 'Abstain')], max_length=10)),
                ('voting_power', models.DecimalField(decimal_places=8, max_digits=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=66)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict)),
                ('governance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='web3.daogovernance')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='governance_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Governance Vote',
                'verbose_name_plural': 'Governance Votes',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='DeFiProtocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('protocol_type', models.CharField(choices=[('dex', 'Decentralized Exchange'), ('lending', 'Lending Protocol'), ('yield', 'Yield Farming'), ('staking', 'Staking'), ('other', 'Other')], max_length=20)),
                ('contract_address', models.CharField(max_length=42)),
                ('website', models.URLField(blank=True)),
                ('documentation', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('apy', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('description', models.TextField(blank=True)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('supported_tokens', models.ManyToManyField(blank=True, to='web3.token')),
            ],
            options={
                'verbose_name': 'DeFi Protocol',
                'verbose_name_plural': 'DeFi Protocols',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DecentralizedStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('storage_type', models.CharField(choices=[('ipfs', 'IPFS'), ('arweave', 'Arweave'), ('swarm', 'Swarm'), ('sia', 'Sia')], max_length=20)),
                ('status', models.CharField(choices=[('uploading', 'Uploading'), ('uploaded', 'Uploaded'), ('pinned', 'Pinned'), ('failed', 'Failed')], default='uploading', max_length=20)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('file_hash', models.CharField(max_length=64)),
                ('storage_hash', models.CharField(max_length=255)),
                ('storage_url', models.URLField(blank=True)),
                ('pin_status', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list)),
                ('metadata', models.JSONField(default=dict)),
                ('related_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web3.smartcontract')),
                ('related_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr.document')),
                ('related_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.invoice')),
            ],
            options={
                'verbose_name': 'Decentralized Storage',
                'verbose_name_plural': 'Decentralized Storage',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='DecentralizedIdentity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('did_identifier', models.CharField(max_length=255, unique=True)),
                ('did_method', models.CharField(choices=[('did:ethr', 'Ethereum DID'), ('did:key', 'Key DID'), ('did:web', 'Web DID'), ('did:polkadot', 'Polkadot DID'), ('did:substrate', 'Substrate DID'), ('did:ens', 'ENS DID')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('revoked', 'Revoked'), ('suspended', 'Suspended'), ('expired', 'Expired')], default='active', max_length=20)),
                ('did_document', models.JSONField(default=dict)),
                ('public_keys', models.JSONField(default=list)),
                ('service_endpoints', models.JSONField(default=list)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_method', models.CharField(blank=True, max_length=100)),
                ('verification_timestamp', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='did', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Decentralized Identity',
                'verbose_name_plural': 'Decentralized Identities',
            },
        ),
        migrations.AddField(
            model_name='blockchaintransaction',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='web3.wallet'),
        ),
        migrations.CreateModel(
            name='BlockchainAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('log_type', models.CharField(choices=[('user_action', 'User Action'), ('system_event', 'System Event'), ('transaction', 'Transaction'), ('data_change', 'Data Change'), ('access_attempt', 'Access Attempt'), ('security_event', 'Security Event')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('event_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('old_data', models.JSONField(blank=True, default=dict)),
                ('new_data', models.JSONField(blank=True, default=dict)),
                ('affected_models', models.JSONField(default=list)),
                ('is_anchored', models.BooleanField(default=False)),
                ('transaction_hash', models.CharField(blank=True, max_length=66)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('metadata', models.JSONField(default=dict)),
                ('anchor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web3.onchainanchor')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blockchain Audit Log',
                'verbose_name_plural': 'Blockchain Audit Logs',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='WalletBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('balance', models.DecimalField(decimal_places=18, default=0, max_digits=36)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balances', to='web3.token')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balances', to='web3.wallet')),
            ],
            options={
                'verbose_name': 'Wallet Balance',
                'verbose_name_plural': 'Wallet Balances',
                'ordering': ['-balance'],
                'unique_together': {('wallet', 'token')},
            },
        ),
        migrations.CreateModel(
            name='TokenizedReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('reward_type', models.CharField(choices=[('bug_report', 'Bug Report'), ('feature_request', 'Feature Request'), ('code_contribution', 'Code Contribution'), ('documentation', 'Documentation'), ('testing', 'Testing'), ('support', 'Support'), ('translation', 'Translation'), ('design', 'Design'), ('marketing', 'Marketing'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('paid', 'Paid')], default='pending', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('token_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('evaluation_notes', models.TextField(blank=True)),
                ('evaluation_score', models.IntegerField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('contribution_url', models.URLField(blank=True)),
                ('metadata', models.JSONField(default=dict)),
                ('evaluator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluated_rewards', to=settings.AUTH_USER_MODEL)),
                ('payment_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web3.blockchaintransaction')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokenized_rewards', to=settings.AUTH_USER_MODEL)),
                ('recipient_wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='web3.wallet')),
                ('token_contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='web3.smartcontract')),
            ],
            options={
                'verbose_name': 'Tokenized Reward',
                'verbose_name_plural': 'Tokenized Rewards',
                'ordering': ['-created'],
                'indexes': [models.Index(fields=['recipient', 'status'], name='web3_tokeni_recipie_76723c_idx'), models.Index(fields=['reward_type'], name='web3_tokeni_reward__96c4d0_idx'), models.Index(fields=['status', 'created'], name='web3_tokeni_status_f408d9_idx')],
            },
        ),
        migrations.CreateModel(
            name='SmartContractModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('module_type', models.CharField(choices=[('invoice_escrow', 'Invoice Escrow'), ('payment_automation', 'Payment Automation'), ('supply_chain', 'Supply Chain Tracking'), ('compliance', 'Compliance Monitoring'), ('governance', 'Governance Voting'), ('rewards', 'Rewards Distribution'), ('audit', 'Audit Logging')], max_length=30)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('deployed', 'Deployed'), ('active', 'Active'), ('paused', 'Paused'), ('deprecated', 'Deprecated')], default='draft', max_length=20)),
                ('contract_address', models.CharField(max_length=42)),
                ('abi', models.JSONField()),
                ('configuration', models.JSONField(default=dict)),
                ('triggers', models.JSONField(default=list)),
                ('conditions', models.JSONField(default=dict)),
                ('integrated_modules', models.JSONField(default=list)),
                ('webhook_endpoints', models.JSONField(default=list)),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('documentation', models.URLField(blank=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='web3.smartcontract')),
            ],
            options={
                'verbose_name': 'Smart Contract Module',
                'verbose_name_plural': 'Smart Contract Modules',
                'ordering': ['-created'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.AddIndex(
            model_name='onchainanchor',
            index=models.Index(fields=['data_hash'], name='web3_onchai_data_ha_e47bf8_idx'),
        ),
        migrations.AddIndex(
            model_name='onchainanchor',
            index=models.Index(fields=['transaction_hash'], name='web3_onchai_transac_15e2ea_idx'),
        ),
        migrations.AddIndex(
            model_name='onchainanchor',
            index=models.Index(fields=['anchor_type'], name='web3_onchai_anchor__1cacdf_idx'),
        ),
        migrations.AddIndex(
            model_name='onchainanchor',
            index=models.Index(fields=['status', 'created'], name='web3_onchai_status_bfc27f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='governancevote',
            unique_together={('governance', 'voter')},
        ),
        migrations.AddIndex(
            model_name='decentralizedstorage',
            index=models.Index(fields=['storage_hash'], name='web3_decent_storage_879542_idx'),
        ),
        migrations.AddIndex(
            model_name='decentralizedstorage',
            index=models.Index(fields=['file_hash'], name='web3_decent_file_ha_dcb46c_idx'),
        ),
        migrations.AddIndex(
            model_name='decentralizedstorage',
            index=models.Index(fields=['storage_type'], name='web3_decent_storage_3249f6_idx'),
        ),
        migrations.AddIndex(
            model_name='decentralizedstorage',
            index=models.Index(fields=['status', 'created'], name='web3_decent_status_ea4800_idx'),
        ),
        migrations.AddIndex(
            model_name='decentralizedidentity',
            index=models.Index(fields=['did_identifier'], name='web3_decent_did_ide_fbf29e_idx'),
        ),
        migrations.AddIndex(
            model_name='decentralizedidentity',
            index=models.Index(fields=['user', 'status'], name='web3_decent_user_id_ad835c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='decentralizedidentity',
            unique_together={('user',)},
        ),
        migrations.AddIndex(
            model_name='daogovernance',
            index=models.Index(fields=['status'], name='web3_daogov_status_da6c2d_idx'),
        ),
        migrations.AddIndex(
            model_name='daogovernance',
            index=models.Index(fields=['proposer', 'status'], name='web3_daogov_propose_f281b8_idx'),
        ),
        migrations.AddIndex(
            model_name='daogovernance',
            index=models.Index(fields=['voting_start', 'voting_end'], name='web3_daogov_voting__33d132_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchaintransaction',
            index=models.Index(fields=['transaction_hash'], name='web3_blockc_transac_1aae6c_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchaintransaction',
            index=models.Index(fields=['user', 'status'], name='web3_blockc_user_id_8d20c5_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchaintransaction',
            index=models.Index(fields=['wallet', 'transaction_type'], name='web3_blockc_wallet__235db0_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchainauditlog',
            index=models.Index(fields=['log_type'], name='web3_blockc_log_typ_bd2e48_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchainauditlog',
            index=models.Index(fields=['user', 'created'], name='web3_blockc_user_id_03e6f8_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchainauditlog',
            index=models.Index(fields=['severity', 'created'], name='web3_blockc_severit_ac6f90_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchainauditlog',
            index=models.Index(fields=['is_anchored', 'created'], name='web3_blockc_is_anch_d898b4_idx'),
        ),
    ]
