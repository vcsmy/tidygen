# Generated by Django 4.2.7 on 2025-09-17 09:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hr', '0002_alter_employee_gender'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, verbose_name='equipment name')),
                ('equipment_type', models.CharField(choices=[('vacuum', 'Vacuum Cleaner'), ('floor_scrubber', 'Floor Scrubber'), ('carpet_cleaner', 'Carpet Cleaner'), ('pressure_washer', 'Pressure Washer'), ('window_cleaner', 'Window Cleaning Equipment'), ('chemical_dispenser', 'Chemical Dispenser'), ('tool', 'Hand Tool'), ('safety', 'Safety Equipment'), ('other', 'Other')], max_length=30, verbose_name='equipment type')),
                ('brand', models.CharField(blank=True, max_length=100, verbose_name='brand')),
                ('model', models.CharField(blank=True, max_length=100, verbose_name='model')),
                ('serial_number', models.CharField(blank=True, max_length=100, unique=True, verbose_name='serial number')),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'In Maintenance'), ('retired', 'Retired'), ('lost', 'Lost'), ('stolen', 'Stolen')], default='active', max_length=20, verbose_name='status')),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], default='good', max_length=20, verbose_name='condition')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='purchase date')),
                ('warranty_expiry', models.DateField(blank=True, null=True, verbose_name='warranty expiry')),
                ('last_maintenance', models.DateField(blank=True, null=True, verbose_name='last maintenance')),
                ('next_maintenance', models.DateField(blank=True, null=True, verbose_name='next maintenance')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='purchase price')),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='current value')),
                ('blockchain_address', models.CharField(blank=True, max_length=42, verbose_name='blockchain address')),
                ('nft_token_id', models.CharField(blank=True, max_length=100, verbose_name='NFT token ID')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_equipment', to='hr.employee')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, verbose_name='facility name')),
                ('facility_type', models.CharField(choices=[('office', 'Office Building'), ('warehouse', 'Warehouse'), ('depot', 'Equipment Depot'), ('client_site', 'Client Site'), ('storage', 'Storage Facility'), ('maintenance', 'Maintenance Center')], max_length=20, verbose_name='facility type')),
                ('address', models.TextField(verbose_name='address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('country', models.CharField(default='US', max_length=100, verbose_name='country')),
                ('contact_person', models.CharField(blank=True, max_length=100, verbose_name='contact person')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('total_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='total area (sq ft)')),
                ('capacity', models.IntegerField(blank=True, null=True, verbose_name='capacity')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('blockchain_address', models.CharField(blank=True, max_length=42, verbose_name='blockchain address')),
                ('nft_token_id', models.CharField(blank=True, max_length=100, verbose_name='NFT token ID')),
            ],
            options={
                'verbose_name': 'Facility',
                'verbose_name_plural': 'Facilities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('make', models.CharField(max_length=50, verbose_name='make')),
                ('model', models.CharField(max_length=50, verbose_name='model')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2030)], verbose_name='year')),
                ('license_plate', models.CharField(max_length=20, unique=True, verbose_name='license plate')),
                ('vin', models.CharField(blank=True, max_length=17, unique=True, verbose_name='VIN')),
                ('vehicle_type', models.CharField(choices=[('van', 'Cleaning Van'), ('truck', 'Truck'), ('car', 'Car'), ('motorcycle', 'Motorcycle'), ('other', 'Other')], max_length=20, verbose_name='vehicle type')),
                ('fuel_type', models.CharField(choices=[('gasoline', 'Gasoline'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('lpg', 'LPG')], max_length=20, verbose_name='fuel type')),
                ('color', models.CharField(blank=True, max_length=30, verbose_name='color')),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'In Maintenance'), ('retired', 'Retired'), ('sold', 'Sold')], default='active', max_length=20, verbose_name='status')),
                ('current_mileage', models.IntegerField(default=0, verbose_name='current mileage')),
                ('last_service_mileage', models.IntegerField(default=0, verbose_name='last service mileage')),
                ('next_service_mileage', models.IntegerField(blank=True, null=True, verbose_name='next service mileage')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='purchase price')),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='current value')),
                ('insurance_policy', models.CharField(blank=True, max_length=100, verbose_name='insurance policy')),
                ('current_location', models.CharField(blank=True, max_length=200, verbose_name='current location')),
                ('blockchain_address', models.CharField(blank=True, max_length=42, verbose_name='blockchain address')),
                ('nft_token_id', models.CharField(blank=True, max_length=100, verbose_name='NFT token ID')),
                ('home_facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='facility_management.facility')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['make', 'model'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('maintenance_type', models.CharField(choices=[('routine', 'Routine Maintenance'), ('repair', 'Repair'), ('inspection', 'Inspection'), ('cleaning', 'Cleaning'), ('calibration', 'Calibration'), ('replacement', 'Part Replacement')], max_length=20, verbose_name='maintenance type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10, verbose_name='priority')),
                ('scheduled_date', models.DateTimeField(blank=True, null=True, verbose_name='scheduled date')),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='completed date')),
                ('estimated_duration', models.DurationField(blank=True, null=True, verbose_name='estimated duration')),
                ('actual_duration', models.DurationField(blank=True, null=True, verbose_name='actual duration')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='estimated cost')),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='actual cost')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20, verbose_name='status')),
                ('blockchain_transaction_hash', models.CharField(blank=True, max_length=66, verbose_name='blockchain transaction hash')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_assignments', to='hr.employee')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='facility_management.equipment')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_performed', to='hr.employee')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='facility_management.vehicle')),
            ],
            options={
                'verbose_name': 'Maintenance Record',
                'verbose_name_plural': 'Maintenance Records',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='current_facility',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipment', to='facility_management.facility'),
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, verbose_name='asset name')),
                ('asset_type', models.CharField(choices=[('vehicle', 'Vehicle'), ('equipment', 'Equipment'), ('furniture', 'Furniture'), ('technology', 'Technology'), ('real_estate', 'Real Estate'), ('other', 'Other')], max_length=20, verbose_name='asset type')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('serial_number', models.CharField(blank=True, max_length=100, verbose_name='serial number')),
                ('model_number', models.CharField(blank=True, max_length=100, verbose_name='model number')),
                ('manufacturer', models.CharField(blank=True, max_length=100, verbose_name='manufacturer')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='purchase price')),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='current value')),
                ('depreciation_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='depreciation rate (%)')),
                ('blockchain_address', models.CharField(blank=True, max_length=42, verbose_name='blockchain address')),
                ('nft_token_id', models.CharField(blank=True, max_length=100, verbose_name='NFT token ID')),
                ('is_tokenized', models.BooleanField(default=False, verbose_name='is tokenized')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assets', to='facility_management.facility')),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Assets',
                'ordering': ['name'],
            },
        ),
    ]
