# Generated by Django 4.2.7 on 2025-10-20 11:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='avatar')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='timezone')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='language')),
                ('is_verified', models.BooleanField(default=False, verbose_name='verified')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='last login IP')),
                ('wallet_address', models.CharField(blank=True, max_length=42, verbose_name='wallet address')),
                ('wallet_verified', models.BooleanField(default=False, verbose_name='wallet verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='core_users', related_query_name='core_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='core_users', related_query_name='core_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'core_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, verbose_name='organization name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('address_line1', models.CharField(blank=True, max_length=200, verbose_name='address line 1')),
                ('address_line2', models.CharField(blank=True, max_length=200, verbose_name='address line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='state')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('industry', models.CharField(blank=True, max_length=100, verbose_name='industry')),
                ('size', models.CharField(blank=True, choices=[('1-10', '1-10 employees'), ('11-50', '11-50 employees'), ('51-200', '51-200 employees'), ('201-500', '201-500 employees'), ('501-1000', '501-1000 employees'), ('1000+', '1000+ employees')], max_length=20, verbose_name='size')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='timezone')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='currency')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='language')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('wallet_address', models.CharField(blank=True, max_length=42, null=True, verbose_name='wallet address')),
                ('blockchain_network', models.CharField(default='ethereum', max_length=20, verbose_name='blockchain network')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'db_table': 'core_organization',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('codename', models.CharField(max_length=100, unique=True, verbose_name='codename')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('module', models.CharField(blank=True, max_length=50, verbose_name='module')),
                ('is_system', models.BooleanField(default=False, verbose_name='system permission')),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
                'db_table': 'core_permissions',
                'ordering': ['module', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='key')),
                ('value', models.JSONField(default=dict, verbose_name='value')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_public', models.BooleanField(default=False, verbose_name='public')),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'db_table': 'core_system_settings',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_system', models.BooleanField(default=False, verbose_name='system role')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('permissions', models.ManyToManyField(blank=True, related_name='roles', to='core.permission', verbose_name='permissions')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'core_roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('permission_denied', 'Permission Denied')], max_length=20, verbose_name='action')),
                ('model_name', models.CharField(max_length=100, verbose_name='model name')),
                ('object_id', models.CharField(blank=True, max_length=100, verbose_name='object ID')),
                ('object_repr', models.CharField(blank=True, max_length=200, verbose_name='object representation')),
                ('changes', models.JSONField(blank=True, default=dict, verbose_name='changes')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'db_table': 'core_audit_logs',
                'ordering': ['-created'],
                'indexes': [models.Index(fields=['user', 'action'], name='core_audit__user_id_bbb36f_idx'), models.Index(fields=['model_name', 'object_id'], name='core_audit__model_n_49efcd_idx'), models.Index(fields=['created'], name='core_audit__created_05ecc1_idx')],
            },
        ),
    ]
