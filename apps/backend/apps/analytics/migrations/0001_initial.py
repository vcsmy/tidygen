# Generated by Django 4.2.7 on 2025-09-15 05:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('dashboard_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Dashboard name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Dashboard description')),
                ('dashboard_type', models.CharField(choices=[('executive', 'Executive'), ('operational', 'Operational'), ('departmental', 'Departmental'), ('custom', 'Custom')], default='custom', max_length=20)),
                ('layout', models.CharField(choices=[('grid', 'Grid'), ('freeform', 'Freeform'), ('tabbed', 'Tabbed')], default='grid', max_length=15)),
                ('configuration', models.JSONField(default=dict, help_text='Dashboard configuration')),
                ('refresh_interval', models.IntegerField(default=300, help_text='Refresh interval in seconds')),
                ('auto_refresh', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='accessible_dashboards', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard',
                'verbose_name_plural': 'Dashboards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('source_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Data source name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Data source description')),
                ('source_type', models.CharField(choices=[('database', 'Database'), ('api', 'API'), ('file', 'File'), ('external', 'External Service'), ('custom', 'Custom')], max_length=20)),
                ('connection_type', models.CharField(choices=[('postgresql', 'PostgreSQL'), ('mysql', 'MySQL'), ('sqlite', 'SQLite'), ('oracle', 'Oracle'), ('mssql', 'Microsoft SQL Server'), ('mongodb', 'MongoDB'), ('redis', 'Redis'), ('rest_api', 'REST API'), ('graphql', 'GraphQL'), ('csv', 'CSV File'), ('excel', 'Excel File'), ('json', 'JSON File')], max_length=20)),
                ('connection_string', models.TextField(blank=True, help_text='Connection string or URL')),
                ('credentials', models.JSONField(default=dict, help_text='Connection credentials (encrypted)')),
                ('configuration', models.JSONField(default=dict, help_text='Data source configuration')),
                ('is_active', models.BooleanField(default=True)),
                ('last_connected', models.DateTimeField(blank=True, null=True)),
                ('connection_status', models.CharField(default='unknown', help_text='Connection status', max_length=20)),
            ],
            options={
                'verbose_name': 'Data Source',
                'verbose_name_plural': 'Data Sources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('kpi_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='KPI name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='KPI description')),
                ('kpi_type', models.CharField(choices=[('financial', 'Financial'), ('operational', 'Operational'), ('customer', 'Customer'), ('employee', 'Employee'), ('inventory', 'Inventory'), ('sales', 'Sales'), ('purchasing', 'Purchasing'), ('custom', 'Custom')], max_length=20)),
                ('calculation_method', models.TextField(help_text='KPI calculation method/formula')),
                ('data_source', models.CharField(help_text='Data source for KPI calculation', max_length=100)),
                ('frequency', models.CharField(choices=[('real_time', 'Real Time'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='daily', max_length=15)),
                ('target_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('warning_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('critical_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('previous_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('change_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('trend', models.CharField(choices=[('increasing', 'Increasing'), ('decreasing', 'Decreasing'), ('stable', 'Stable'), ('volatile', 'Volatile')], default='stable', max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('last_calculated', models.DateTimeField(blank=True, null=True)),
                ('next_calculation', models.DateTimeField(blank=True, null=True)),
                ('chart_type', models.CharField(default='line', help_text='Chart type for visualization', max_length=20)),
                ('color', models.CharField(default='#007bff', help_text='Hex color for visualization', max_length=7)),
                ('unit', models.CharField(blank=True, help_text='Unit of measurement', max_length=20)),
            ],
            options={
                'verbose_name': 'KPI',
                'verbose_name_plural': 'KPIs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('template_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Template name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Template description')),
                ('template_type', models.CharField(choices=[('financial', 'Financial'), ('operational', 'Operational'), ('inventory', 'Inventory'), ('hr', 'Human Resources'), ('sales', 'Sales'), ('purchasing', 'Purchasing'), ('custom', 'Custom')], max_length=20)),
                ('template_config', models.JSONField(default=dict, help_text='Template configuration')),
                ('default_parameters', models.JSONField(default=dict, help_text='Default parameters')),
                ('required_parameters', models.JSONField(default=list, help_text='Required parameters')),
                ('usage_count', models.IntegerField(default=0, help_text='Number of times template has been used')),
                ('is_public', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('report_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Report name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Report description')),
                ('report_type', models.CharField(choices=[('financial', 'Financial'), ('operational', 'Operational'), ('inventory', 'Inventory'), ('hr', 'Human Resources'), ('sales', 'Sales'), ('purchasing', 'Purchasing'), ('custom', 'Custom')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], default='draft', max_length=15)),
                ('query_parameters', models.JSONField(default=dict, help_text='Report query parameters')),
                ('filters', models.JSONField(default=dict, help_text='Report filters')),
                ('columns', models.JSONField(default=list, help_text='Report columns configuration')),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON'), ('html', 'HTML')], default='pdf', max_length=10)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_frequency', models.CharField(blank=True, help_text='daily, weekly, monthly, quarterly, yearly', max_length=20)),
                ('schedule_time', models.TimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('file_path', models.CharField(blank=True, help_text='Path to generated report file', max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('execution_time', models.DurationField(blank=True, help_text='Report execution time', null=True)),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='accessible_reports', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('widget_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Widget name', max_length=200)),
                ('widget_type', models.CharField(choices=[('kpi', 'KPI'), ('chart', 'Chart'), ('table', 'Table'), ('gauge', 'Gauge'), ('map', 'Map'), ('text', 'Text'), ('image', 'Image'), ('custom', 'Custom')], max_length=15)),
                ('configuration', models.JSONField(default=dict, help_text='Widget configuration')),
                ('data_source', models.CharField(blank=True, help_text='Data source for widget', max_length=100)),
                ('query', models.TextField(blank=True, help_text='Data query for widget')),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('area', 'Area Chart'), ('scatter', 'Scatter Plot'), ('heatmap', 'Heatmap'), ('funnel', 'Funnel Chart'), ('gauge', 'Gauge Chart')], max_length=15)),
                ('chart_config', models.JSONField(default=dict, help_text='Chart configuration')),
                ('position_x', models.IntegerField(default=0, help_text='X position in grid')),
                ('position_y', models.IntegerField(default=0, help_text='Y position in grid')),
                ('width', models.IntegerField(default=4, help_text='Width in grid units')),
                ('height', models.IntegerField(default=3, help_text='Height in grid units')),
                ('is_active', models.BooleanField(default=True)),
                ('refresh_interval', models.IntegerField(default=300, help_text='Refresh interval in seconds')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='analytics.dashboard')),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='KPIMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('value', models.DecimalField(decimal_places=4, max_digits=15)),
                ('measurement_date', models.DateTimeField()),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this measurement')),
                ('context_data', models.JSONField(default=dict, help_text='Additional context data')),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='analytics.kpi')),
            ],
            options={
                'verbose_name': 'KPI Measurement',
                'verbose_name_plural': 'KPI Measurements',
                'ordering': ['-measurement_date'],
                'unique_together': {('kpi', 'measurement_date')},
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('event_type', models.CharField(choices=[('user_action', 'User Action'), ('system_event', 'System Event'), ('data_change', 'Data Change'), ('report_generated', 'Report Generated'), ('dashboard_viewed', 'Dashboard Viewed'), ('kpi_updated', 'KPI Updated'), ('error', 'Error'), ('custom', 'Custom')], max_length=20)),
                ('event_name', models.CharField(help_text='Event name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Event description')),
                ('session_id', models.CharField(blank=True, help_text='User session ID', max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('context_data', models.JSONField(default=dict, help_text='Event context data')),
                ('metadata', models.JSONField(default=dict, help_text='Additional event metadata')),
                ('event_timestamp', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DurationField(blank=True, help_text='Event duration', null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analytics Event',
                'verbose_name_plural': 'Analytics Events',
                'ordering': ['-event_timestamp'],
                'indexes': [models.Index(fields=['event_type', 'event_timestamp'], name='analytics_a_event_t_0a174a_idx'), models.Index(fields=['user', 'event_timestamp'], name='analytics_a_user_id_4a5f7d_idx'), models.Index(fields=['event_timestamp'], name='analytics_a_event_t_767ec6_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('cache_key', models.CharField(help_text='Cache key', max_length=500, unique=True)),
                ('cache_type', models.CharField(choices=[('kpi', 'KPI'), ('report', 'Report'), ('dashboard', 'Dashboard'), ('query', 'Query'), ('aggregation', 'Aggregation')], max_length=20)),
                ('data', models.JSONField(help_text='Cached data')),
                ('metadata', models.JSONField(default=dict, help_text='Cache metadata')),
                ('expires_at', models.DateTimeField(help_text='Cache expiration time')),
                ('hit_count', models.IntegerField(default=0, help_text='Number of cache hits')),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('related_dashboard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cache_entries', to='analytics.dashboard')),
                ('related_kpi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cache_entries', to='analytics.kpi')),
                ('related_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cache_entries', to='analytics.report')),
            ],
            options={
                'verbose_name': 'Analytics Cache',
                'verbose_name_plural': 'Analytics Cache',
                'ordering': ['-last_accessed'],
                'indexes': [models.Index(fields=['cache_key'], name='analytics_a_cache_k_9a5fb4_idx'), models.Index(fields=['expires_at'], name='analytics_a_expires_4e35a3_idx'), models.Index(fields=['cache_type'], name='analytics_a_cache_t_78d0e5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('alert_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('alert_type', models.CharField(choices=[('kpi_threshold', 'KPI Threshold'), ('data_anomaly', 'Data Anomaly'), ('system_error', 'System Error'), ('scheduled_report', 'Scheduled Report'), ('custom', 'Custom')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=15)),
                ('title', models.CharField(help_text='Alert title', max_length=200)),
                ('message', models.TextField(help_text='Alert message')),
                ('description', models.TextField(blank=True, help_text='Detailed alert description')),
                ('alert_data', models.JSONField(default=dict, help_text='Alert-specific data')),
                ('threshold_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('is_notified', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('triggered_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('related_dashboard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to='analytics.dashboard')),
                ('related_kpi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to='analytics.kpi')),
                ('related_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to='analytics.report')),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Alerts',
                'ordering': ['-triggered_at'],
                'indexes': [models.Index(fields=['status', 'severity'], name='analytics_a_status_361499_idx'), models.Index(fields=['alert_type', 'triggered_at'], name='analytics_a_alert_t_0878b3_idx'), models.Index(fields=['status'], name='analytics_a_status_3e9fdc_idx')],
            },
        ),
    ]
