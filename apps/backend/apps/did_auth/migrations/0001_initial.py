# Generated by Django 4.2.7 on 2025-09-19 13:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DIDCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credential_type', models.CharField(choices=[('identity', 'Identity Credential'), ('employment', 'Employment Credential'), ('certification', 'Certification Credential'), ('membership', 'Membership Credential'), ('custom', 'Custom Credential')], help_text='The type of credential', max_length=100)),
                ('credential_data', models.JSONField(help_text='The credential data as per W3C VC specification')),
                ('issuer', models.CharField(help_text='DID of the entity that issued this credential', max_length=255)),
                ('issued_at', models.DateTimeField(auto_now_add=True, help_text='When this credential was issued')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date for this credential', null=True)),
                ('revoked', models.BooleanField(default=False, help_text='Whether this credential has been revoked')),
                ('revoked_at', models.DateTimeField(blank=True, help_text='When this credential was revoked', null=True)),
                ('revoked_by', models.CharField(blank=True, help_text='DID of the entity that revoked this credential', max_length=255)),
                ('on_chain_tx_hash', models.CharField(blank=True, help_text='Transaction hash if stored on-chain', max_length=66, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for this credential')),
            ],
            options={
                'verbose_name': 'DID Credential',
                'verbose_name_plural': 'DID Credentials',
                'ordering': ['-issued_at'],
            },
        ),
        migrations.CreateModel(
            name='DIDDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('did', models.CharField(db_index=True, help_text='The DID identifier (e.g., did:ethr:0x123...)', max_length=255, unique=True)),
                ('document', models.JSONField(help_text='The complete DID document as per W3C DID specification')),
                ('controller', models.CharField(help_text='The DID of the controller of this DID document', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this DID document was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this DID document was last updated')),
                ('on_chain_tx_hash', models.CharField(blank=True, help_text='Transaction hash if stored on-chain', max_length=66, null=True)),
                ('on_chain_block_number', models.BigIntegerField(blank=True, help_text='Block number where the transaction was included', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='active', help_text='Current status of the DID document', max_length=20)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date for the DID document', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for the DID document')),
            ],
            options={
                'verbose_name': 'DID Document',
                'verbose_name_plural': 'DID Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DIDSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_token', models.CharField(help_text='Unique session token', max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this session was created')),
                ('expires_at', models.DateTimeField(help_text='When this session expires')),
                ('last_activity', models.DateTimeField(auto_now=True, help_text='Last activity timestamp')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the session', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this session is active')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional session metadata')),
                ('did', models.ForeignKey(help_text='The DID associated with this session', on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='did_auth.diddocument')),
            ],
            options={
                'verbose_name': 'DID Session',
                'verbose_name_plural': 'DID Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DIDRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(choices=[('admin', 'Administrator'), ('finance_manager', 'Finance Manager'), ('auditor', 'Auditor'), ('hr_manager', 'HR Manager'), ('field_supervisor', 'Field Supervisor'), ('cleaner', 'Cleaner'), ('client', 'Client'), ('supplier', 'Supplier'), ('custom', 'Custom Role')], help_text='The name of the role', max_length=100)),
                ('custom_role_name', models.CharField(blank=True, help_text="Custom role name if role_type is 'custom'", max_length=100)),
                ('permissions', models.JSONField(default=list, help_text='List of permissions granted by this role')),
                ('granted_by', models.CharField(help_text='DID of the entity that granted this role', max_length=255)),
                ('granted_at', models.DateTimeField(auto_now_add=True, help_text='When this role was granted')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date for this role', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this role is currently active')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for this role')),
                ('did', models.ForeignKey(help_text='The DID this role is assigned to', on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='did_auth.diddocument')),
            ],
            options={
                'verbose_name': 'DID Role',
                'verbose_name_plural': 'DID Roles',
                'ordering': ['-granted_at'],
            },
        ),
        migrations.CreateModel(
            name='DIDPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name for this permission', max_length=100, unique=True)),
                ('display_name', models.CharField(help_text='Human-readable display name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of what this permission allows')),
                ('category', models.CharField(choices=[('finance', 'Finance'), ('hr', 'Human Resources'), ('inventory', 'Inventory'), ('scheduling', 'Scheduling'), ('analytics', 'Analytics'), ('admin', 'Administration'), ('audit', 'Audit'), ('custom', 'Custom')], help_text='Category this permission belongs to', max_length=50)),
                ('resource', models.CharField(help_text='Resource this permission applies to', max_length=100)),
                ('action', models.CharField(help_text='Action this permission allows (read, write, delete, etc.)', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this permission is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this permission was created')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for this permission')),
            ],
            options={
                'verbose_name': 'DID Permission',
                'verbose_name_plural': 'DID Permissions',
                'ordering': ['category', 'name'],
                'indexes': [models.Index(fields=['name'], name='did_auth_di_name_e49779_idx'), models.Index(fields=['category'], name='did_auth_di_categor_09bd01_idx'), models.Index(fields=['is_active'], name='did_auth_di_is_acti_cd1236_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='diddocument',
            index=models.Index(fields=['did'], name='did_auth_di_did_f9c2f5_idx'),
        ),
        migrations.AddIndex(
            model_name='diddocument',
            index=models.Index(fields=['controller'], name='did_auth_di_control_0a41bf_idx'),
        ),
        migrations.AddIndex(
            model_name='diddocument',
            index=models.Index(fields=['status'], name='did_auth_di_status_01a796_idx'),
        ),
        migrations.AddIndex(
            model_name='diddocument',
            index=models.Index(fields=['created_at'], name='did_auth_di_created_86693f_idx'),
        ),
        migrations.AddField(
            model_name='didcredential',
            name='did',
            field=models.ForeignKey(help_text='The DID this credential is issued to', on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='did_auth.diddocument'),
        ),
        migrations.AddIndex(
            model_name='didsession',
            index=models.Index(fields=['did'], name='did_auth_di_did_id_46d69e_idx'),
        ),
        migrations.AddIndex(
            model_name='didsession',
            index=models.Index(fields=['session_token'], name='did_auth_di_session_949104_idx'),
        ),
        migrations.AddIndex(
            model_name='didsession',
            index=models.Index(fields=['is_active'], name='did_auth_di_is_acti_be9f59_idx'),
        ),
        migrations.AddIndex(
            model_name='didsession',
            index=models.Index(fields=['expires_at'], name='did_auth_di_expires_871ef4_idx'),
        ),
        migrations.AddIndex(
            model_name='didrole',
            index=models.Index(fields=['did'], name='did_auth_di_did_id_c09cfa_idx'),
        ),
        migrations.AddIndex(
            model_name='didrole',
            index=models.Index(fields=['role_name'], name='did_auth_di_role_na_e8887d_idx'),
        ),
        migrations.AddIndex(
            model_name='didrole',
            index=models.Index(fields=['is_active'], name='did_auth_di_is_acti_4a9008_idx'),
        ),
        migrations.AddIndex(
            model_name='didrole',
            index=models.Index(fields=['granted_at'], name='did_auth_di_granted_b92feb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='didrole',
            unique_together={('did', 'role_name')},
        ),
        migrations.AddIndex(
            model_name='didcredential',
            index=models.Index(fields=['did'], name='did_auth_di_did_id_db2e43_idx'),
        ),
        migrations.AddIndex(
            model_name='didcredential',
            index=models.Index(fields=['credential_type'], name='did_auth_di_credent_12b872_idx'),
        ),
        migrations.AddIndex(
            model_name='didcredential',
            index=models.Index(fields=['issuer'], name='did_auth_di_issuer_eb88c2_idx'),
        ),
        migrations.AddIndex(
            model_name='didcredential',
            index=models.Index(fields=['issued_at'], name='did_auth_di_issued__425952_idx'),
        ),
        migrations.AddIndex(
            model_name='didcredential',
            index=models.Index(fields=['revoked'], name='did_auth_di_revoked_80c30e_idx'),
        ),
    ]
