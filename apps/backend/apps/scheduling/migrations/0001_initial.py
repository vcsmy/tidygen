# Generated by Django 4.2.7 on 2025-09-15 05:05

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('client_name', models.CharField(blank=True, max_length=200)),
                ('client_email', models.EmailField(blank=True, max_length=254)),
                ('client_phone', models.CharField(blank=True, max_length=20)),
                ('client_notes', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('is_virtual', models.BooleanField(default=False)),
                ('meeting_url', models.URLField(blank=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_rule', models.JSONField(blank=True, default=dict)),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('actual_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('is_billable', models.BooleanField(default=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_datetime', models.DateTimeField(blank=True, null=True)),
                ('completion_notes', models.TextField(blank=True)),
                ('completion_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('completion_feedback', models.TextField(blank=True)),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('external_url', models.URLField(blank=True)),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('resource_type', models.CharField(choices=[('room', 'Room'), ('equipment', 'Equipment'), ('vehicle', 'Vehicle'), ('person', 'Person'), ('service', 'Service'), ('other', 'Other')], default='room', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('capacity', models.PositiveIntegerField(default=1)),
                ('specifications', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True)),
                ('maintenance_schedule', models.JSONField(blank=True, default=dict)),
                ('last_maintenance', models.DateTimeField(blank=True, null=True)),
                ('next_maintenance', models.DateTimeField(blank=True, null=True)),
                ('hourly_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('daily_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('image_url', models.URLField(blank=True)),
                ('documents', models.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('conflict_type', models.CharField(choices=[('double_booking', 'Double Booking'), ('resource_conflict', 'Resource Conflict'), ('team_conflict', 'Team Conflict'), ('time_conflict', 'Time Conflict'), ('location_conflict', 'Location Conflict'), ('capacity_exceeded', 'Capacity Exceeded')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved'), ('ignored', 'Ignored'), ('escalated', 'Escalated')], default='pending', max_length=20)),
                ('conflict_description', models.TextField()),
                ('conflict_datetime', models.DateTimeField()),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('impact_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('affected_resources', models.ManyToManyField(blank=True, to='scheduling.resource')),
                ('affected_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('conflicting_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicting_conflicts', to='scheduling.appointment')),
                ('primary_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_conflicts', to='scheduling.appointment')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_conflicts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Schedule Conflict',
                'verbose_name_plural': 'Schedule Conflicts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('integration_type', models.CharField(choices=[('calendar', 'Calendar System'), ('booking', 'Booking System'), ('crm', 'CRM System'), ('erp', 'ERP System'), ('communication', 'Communication Platform'), ('payment', 'Payment System')], max_length=20)),
                ('provider_name', models.CharField(max_length=100)),
                ('provider_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(blank=True, default=dict)),
                ('api_key', models.CharField(blank=True, max_length=500)),
                ('api_secret', models.CharField(blank=True, max_length=500)),
                ('access_token', models.TextField(blank=True)),
                ('refresh_token', models.TextField(blank=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('sync_frequency', models.CharField(choices=[('realtime', 'Real-time'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='hourly', max_length=20)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_status', models.CharField(choices=[('connected', 'Connected'), ('disconnected', 'Disconnected'), ('error', 'Error'), ('syncing', 'Syncing')], default='disconnected', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
            ],
            options={
                'verbose_name': 'Schedule Integration',
                'verbose_name_plural': 'Schedule Integrations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('schedule_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('custom', 'Custom')], default='weekly', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('recurrence_interval', models.PositiveIntegerField(default=1)),
                ('recurrence_days', models.JSONField(blank=True, default=list)),
                ('recurrence_dates', models.JSONField(blank=True, default=list)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('break_duration_minutes', models.PositiveIntegerField(default=0)),
                ('break_start_time', models.TimeField(blank=True, null=True)),
                ('max_capacity', models.PositiveIntegerField(default=1)),
                ('min_advance_booking_hours', models.PositiveIntegerField(default=24)),
                ('max_advance_booking_days', models.PositiveIntegerField(default=30)),
                ('base_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
            ],
            options={
                'verbose_name': 'Schedule Template',
                'verbose_name_plural': 'Schedule Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('max_members', models.PositiveIntegerField(blank=True, null=True)),
                ('skills', models.JSONField(blank=True, default=list)),
                ('specializations', models.JSONField(blank=True, default=list)),
                ('availability_schedule', models.JSONField(blank=True, default=dict)),
                ('team_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_teams', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('rule_type', models.CharField(choices=[('working_hours', 'Working Hours'), ('holiday', 'Holiday'), ('break_time', 'Break Time'), ('maintenance', 'Maintenance'), ('blackout', 'Blackout Period'), ('capacity_limit', 'Capacity Limit'), ('advance_booking', 'Advance Booking'), ('cancellation', 'Cancellation')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_global', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_rule', models.JSONField(blank=True, default=dict)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('applies_to_resources', models.ManyToManyField(blank=True, to='scheduling.resource')),
                ('applies_to_teams', models.ManyToManyField(blank=True, to='scheduling.team')),
                ('applies_to_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Schedule Rule',
                'verbose_name_plural': 'Schedule Rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('notification_type', models.CharField(choices=[('appointment_created', 'Appointment Created'), ('appointment_updated', 'Appointment Updated'), ('appointment_cancelled', 'Appointment Cancelled'), ('appointment_reminder', 'Appointment Reminder'), ('conflict_detected', 'Conflict Detected'), ('resource_unavailable', 'Resource Unavailable'), ('team_member_unavailable', 'Team Member Unavailable'), ('schedule_change', 'Schedule Change')], max_length=30)),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], default='email', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('delivery_details', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('recipients', models.ManyToManyField(related_name='schedule_notifications', to=settings.AUTH_USER_MODEL)),
                ('related_appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='scheduling.appointment')),
                ('related_conflict', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='scheduling.scheduleconflict')),
            ],
            options={
                'verbose_name': 'Schedule Notification',
                'verbose_name_plural': 'Schedule Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('total_appointments', models.PositiveIntegerField(default=0)),
                ('completed_appointments', models.PositiveIntegerField(default=0)),
                ('cancelled_appointments', models.PositiveIntegerField(default=0)),
                ('no_show_appointments', models.PositiveIntegerField(default=0)),
                ('total_scheduled_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_available_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('utilization_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('resource_utilization', models.JSONField(blank=True, default=dict)),
                ('team_utilization', models.JSONField(blank=True, default=dict)),
                ('total_conflicts', models.PositiveIntegerField(default=0)),
                ('resolved_conflicts', models.PositiveIntegerField(default=0)),
                ('conflict_resolution_time', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('average_appointment_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('metrics', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Schedule Analytics',
                'verbose_name_plural': 'Schedule Analytics',
                'ordering': ['-period_start'],
                'unique_together': {('period_start', 'period_end', 'period_type')},
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='assigned_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='scheduling.team'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='assigned_users',
            field=models.ManyToManyField(blank=True, related_name='assigned_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='parent_appointment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recurring_instances', to='scheduling.appointment'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='required_resources',
            field=models.ManyToManyField(blank=True, related_name='appointments', to='scheduling.resource'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('member', 'Member'), ('lead', 'Lead'), ('specialist', 'Specialist'), ('trainee', 'Trainee'), ('consultant', 'Consultant')], default='member', max_length=20)),
                ('joined_date', models.DateField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('skills', models.JSONField(blank=True, default=list)),
                ('certifications', models.JSONField(blank=True, default=list)),
                ('availability_schedule', models.JSONField(blank=True, default=dict)),
                ('max_hours_per_week', models.PositiveIntegerField(default=40)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='scheduling.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
                'ordering': ['team', 'user'],
                'unique_together': {('team', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['start_datetime', 'end_datetime'], name='scheduling__start_d_c13b66_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='scheduling__status_1008cc_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['start_datetime'], name='scheduling__start_d_df08a7_idx'),
        ),
    ]
