# Generated by Django 4.2.7 on 2025-09-19 12:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('invoice_created', 'Invoice Created'), ('invoice_updated', 'Invoice Updated'), ('invoice_deleted', 'Invoice Deleted'), ('payment_created', 'Payment Created'), ('payment_processed', 'Payment Processed'), ('payment_failed', 'Payment Failed'), ('expense_created', 'Expense Created'), ('expense_approved', 'Expense Approved'), ('expense_rejected', 'Expense Rejected'), ('sale_created', 'Sale Created'), ('sale_updated', 'Sale Updated'), ('client_created', 'Client Created'), ('client_updated', 'Client Updated'), ('contract_created', 'Contract Created'), ('contract_updated', 'Contract Updated'), ('employee_created', 'Employee Created'), ('employee_updated', 'Employee Updated'), ('payroll_processed', 'Payroll Processed'), ('leave_approved', 'Leave Approved'), ('leave_rejected', 'Leave Rejected'), ('user_login', 'User Login'), ('user_logout', 'User Logout'), ('permission_granted', 'Permission Granted'), ('permission_revoked', 'Permission Revoked'), ('data_export', 'Data Export'), ('data_import', 'Data Import'), ('system_backup', 'System Backup'), ('system_restore', 'System Restore')], db_index=True, help_text='Type of audit event', max_length=50)),
                ('module', models.CharField(choices=[('finance', 'Finance'), ('sales', 'Sales'), ('hr', 'Human Resources'), ('inventory', 'Inventory'), ('purchasing', 'Purchasing'), ('scheduling', 'Scheduling'), ('analytics', 'Analytics'), ('system', 'System'), ('wallet', 'Wallet'), ('audit_trail', 'Audit Trail')], db_index=True, help_text='Module that generated the event', max_length=20)),
                ('object_id', models.CharField(db_index=True, help_text='ID of the object that triggered the event', max_length=100)),
                ('object_type', models.CharField(help_text='Type of the object that triggered the event', max_length=100)),
                ('data', models.JSONField(help_text='Event data payload')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional event metadata')),
                ('session_id', models.CharField(blank=True, help_text='Session ID when event occurred', max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string', null=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='When the event occurred')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the audit record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the audit record was last updated')),
                ('hash', models.CharField(db_index=True, help_text='SHA256 hash of the event data', max_length=64, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('hashed', 'Hashed'), ('on_chain', 'On-Chain'), ('verified', 'Verified'), ('failed', 'Failed')], db_index=True, default='pending', help_text='Current status of the audit event', max_length=20)),
                ('on_chain_hash', models.CharField(blank=True, db_index=True, help_text='On-chain hash (with 0x prefix)', max_length=66, null=True)),
                ('on_chain_tx_hash', models.CharField(blank=True, db_index=True, help_text='Blockchain transaction hash', max_length=66, null=True)),
                ('on_chain_block_number', models.BigIntegerField(blank=True, help_text='Block number where event was stored', null=True)),
                ('on_chain_timestamp', models.DateTimeField(blank=True, help_text='Blockchain timestamp', null=True)),
                ('ipfs_hash', models.CharField(blank=True, db_index=True, help_text='IPFS hash for decentralized storage', max_length=100, null=True)),
                ('user', models.ForeignKey(blank=True, help_text='User who triggered the event', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Event',
                'verbose_name_plural': 'Audit Events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_type', 'timestamp'], name='audit_trail_event_t_b6b1af_idx'), models.Index(fields=['module', 'timestamp'], name='audit_trail_module_23f58b_idx'), models.Index(fields=['user', 'timestamp'], name='audit_trail_user_id_5e712a_idx'), models.Index(fields=['status', 'timestamp'], name='audit_trail_status_ff87e1_idx'), models.Index(fields=['on_chain_tx_hash'], name='audit_trail_on_chai_e05b95_idx'), models.Index(fields=['ipfs_hash'], name='audit_trail_ipfs_ha_dd7300_idx')],
            },
        ),
    ]
