# Generated by Django 4.2.7 on 2025-10-20 11:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('freelancers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GigCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='category name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icon')),
                ('color', models.CharField(blank=True, max_length=7, verbose_name='color')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('default_hourly_rate_min', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='default min hourly rate')),
                ('default_hourly_rate_max', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='default max hourly rate')),
            ],
            options={
                'verbose_name': 'Gig Category',
                'verbose_name_plural': 'Gig Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GigJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('job_id', models.CharField(max_length=50, unique=True, verbose_name='job ID')),
                ('title', models.CharField(max_length=200, verbose_name='job title')),
                ('description', models.TextField(verbose_name='job description')),
                ('client_type', models.CharField(choices=[('individual', 'Individual'), ('corporate', 'Corporate')], default='individual', max_length=20, verbose_name='client type')),
                ('service_address', models.CharField(max_length=500, verbose_name='service address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('country', models.CharField(default='US', max_length=100, verbose_name='country')),
                ('service_type', models.CharField(max_length=100, verbose_name='service type')),
                ('property_type', models.CharField(max_length=50, verbose_name='property type')),
                ('property_size', models.CharField(blank=True, max_length=100, verbose_name='property size')),
                ('preferred_start_date', models.DateTimeField(blank=True, null=True, verbose_name='preferred start date')),
                ('preferred_end_date', models.DateTimeField(blank=True, null=True, verbose_name='preferred end date')),
                ('actual_start_date', models.DateTimeField(blank=True, null=True, verbose_name='actual start date')),
                ('actual_end_date', models.DateTimeField(blank=True, null=True, verbose_name='actual end date')),
                ('estimated_duration_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='estimated duration hours')),
                ('actual_duration_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='actual duration hours')),
                ('payment_method', models.CharField(choices=[('hourly', 'Hourly Rate'), ('fixed', 'Fixed Price'), ('performance', 'Performance Based')], default='hourly', max_length=20, verbose_name='payment method')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='hourly rate')),
                ('fixed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='fixed price')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='currency')),
                ('required_skills', models.JSONField(default=list, verbose_name='required skills')),
                ('required_certifications', models.JSONField(default=list, verbose_name='required certifications')),
                ('special_requirements', models.TextField(blank=True, verbose_name='special requirements')),
                ('assigned_at', models.DateTimeField(blank=True, null=True, verbose_name='assigned at')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('disputed', 'Disputed')], default='draft', max_length=20, verbose_name='status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10, verbose_name='priority')),
                ('client_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='client rating')),
                ('client_feedback', models.TextField(blank=True, verbose_name='client feedback')),
                ('freelancer_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='freelancer rating')),
                ('freelancer_feedback', models.TextField(blank=True, verbose_name='freelancer feedback')),
                ('smart_contract_address', models.CharField(blank=True, max_length=42, verbose_name='smart contract address')),
                ('blockchain_transaction_hash', models.CharField(blank=True, max_length=66, verbose_name='blockchain transaction hash')),
                ('nft_job_badge', models.CharField(blank=True, max_length=100, verbose_name='NFT job badge')),
                ('is_urgent', models.BooleanField(default=False, verbose_name='is urgent')),
                ('requires_background_check', models.BooleanField(default=True, verbose_name='requires background check')),
                ('allows_multiple_freelancers', models.BooleanField(default=False, verbose_name='allows multiple freelancers')),
                ('max_freelancers', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='max freelancers')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_gigs', to=settings.AUTH_USER_MODEL)),
                ('assigned_freelancer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_jobs', to='freelancers.freelancer')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='jobs', to='gig_management.gigcategory')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_gigs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gig Job',
                'verbose_name_plural': 'Gig Jobs',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='JobMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('milestone_type', models.CharField(choices=[('start', 'Job Started'), ('in_progress', 'In Progress'), ('quality_check', 'Quality Check'), ('completion', 'Job Completed'), ('payment', 'Payment Released')], max_length=20, verbose_name='milestone type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('expected_date', models.DateTimeField(blank=True, null=True, verbose_name='expected date')),
                ('actual_date', models.DateTimeField(blank=True, null=True, verbose_name='actual date')),
                ('is_completed', models.BooleanField(default=False, verbose_name='is completed')),
                ('quality_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='quality score')),
                ('quality_notes', models.TextField(blank=True, verbose_name='quality notes')),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='payment amount')),
                ('payment_released', models.BooleanField(default=False, verbose_name='payment released')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='payment date')),
                ('milestone_hash', models.CharField(blank=True, max_length=66, verbose_name='milestone hash')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_milestones', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='gig_management.gigjob')),
            ],
            options={
                'verbose_name': 'Job Milestone',
                'verbose_name_plural': 'Job Milestones',
                'ordering': ['expected_date', 'created'],
            },
        ),
        migrations.CreateModel(
            name='JobPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('photo_type', models.CharField(choices=[('before', 'Before'), ('during', 'During'), ('after', 'After'), ('quality_check', 'Quality Check'), ('issue', 'Issue Documentation')], max_length=20, verbose_name='photo type')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('image', models.ImageField(upload_to='job_photos/', verbose_name='image')),
                ('taken_at', models.DateTimeField(auto_now_add=True, verbose_name='taken at')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='longitude')),
                ('photo_hash', models.CharField(blank=True, max_length=66, verbose_name='photo hash')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='gig_management.gigjob')),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='gig_management.jobmilestone')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_job_photos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Photo',
                'verbose_name_plural': 'Job Photos',
                'ordering': ['-taken_at'],
            },
        ),
        migrations.CreateModel(
            name='JobMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('message_type', models.CharField(choices=[('general', 'General'), ('question', 'Question'), ('update', 'Update'), ('issue', 'Issue'), ('requirement', 'Requirement'), ('feedback', 'Feedback')], default='general', max_length=20, verbose_name='message type')),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='subject')),
                ('content', models.TextField(verbose_name='content')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('attachments', models.JSONField(default=list, verbose_name='attachments')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='gig_management.gigjob')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_job_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Message',
                'verbose_name_plural': 'Job Messages',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='GigApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('cover_letter', models.TextField(blank=True, verbose_name='cover letter')),
                ('proposed_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='proposed rate')),
                ('estimated_completion_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='estimated completion time hours')),
                ('availability_start', models.DateTimeField(blank=True, null=True, verbose_name='availability start')),
                ('availability_end', models.DateTimeField(blank=True, null=True, verbose_name='availability end')),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('reviewing', 'Reviewing'), ('shortlisted', 'Shortlisted'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='submitted', max_length=20, verbose_name='status')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='reviewed at')),
                ('review_notes', models.TextField(blank=True, verbose_name='review notes')),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to='freelancers.freelancer')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='gig_management.gigjob')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gig Application',
                'verbose_name_plural': 'Gig Applications',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='JobReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('overall_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='overall rating')),
                ('quality_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='quality rating')),
                ('timeliness_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='timeliness rating')),
                ('communication_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='communication rating')),
                ('professionalism_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='professionalism rating')),
                ('title', models.CharField(max_length=200, verbose_name='review title')),
                ('comment', models.TextField(verbose_name='comment')),
                ('would_recommend', models.BooleanField(default=True, verbose_name='would recommend')),
                ('response', models.TextField(blank=True, verbose_name='response')),
                ('response_at', models.DateTimeField(blank=True, null=True, verbose_name='response at')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='gig_management.gigjob')),
                ('response_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_review_responses', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Review',
                'verbose_name_plural': 'Job Reviews',
                'ordering': ['-created'],
                'indexes': [models.Index(fields=['job', 'overall_rating'], name='gig_managem_job_id_a91541_idx')],
                'unique_together': {('job', 'reviewer')},
            },
        ),
        migrations.AddIndex(
            model_name='gigjob',
            index=models.Index(fields=['job_id'], name='gig_managem_job_id_cebceb_idx'),
        ),
        migrations.AddIndex(
            model_name='gigjob',
            index=models.Index(fields=['status', 'priority'], name='gig_managem_status_636e0e_idx'),
        ),
        migrations.AddIndex(
            model_name='gigjob',
            index=models.Index(fields=['city', 'state'], name='gig_managem_city_e1ea97_idx'),
        ),
        migrations.AddIndex(
            model_name='gigjob',
            index=models.Index(fields=['preferred_start_date'], name='gig_managem_preferr_57e5c6_idx'),
        ),
        migrations.AddIndex(
            model_name='gigjob',
            index=models.Index(fields=['assigned_freelancer'], name='gig_managem_assigne_6a7a6b_idx'),
        ),
        migrations.AddIndex(
            model_name='gigapplication',
            index=models.Index(fields=['job', 'status'], name='gig_managem_job_id_d5d732_idx'),
        ),
        migrations.AddIndex(
            model_name='gigapplication',
            index=models.Index(fields=['freelancer', 'status'], name='gig_managem_freelan_43bb72_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gigapplication',
            unique_together={('job', 'freelancer')},
        ),
    ]
